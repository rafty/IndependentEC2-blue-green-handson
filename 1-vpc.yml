AWSTemplateFormatVersion: 2010-09-09
Description: >-
  MQ Agent Server test vpc
Parameters:
  ProjectName:
    Type: String
    # Default: ectest
  RoleName:
    Type: String
    # Default: mqagt
  Environment:
    Type: String
    # Default: dev
  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1a:
    Type: String
    Default: 10.0.11.0/24
  PublicSubnet1c:
    Type: String
    Default: 10.0.12.0/24
  AZ1a:
    Type: String
    Default: ap-northeast-1a
  AZ1c:
    Type: String
    Default: ap-northeast-1c
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.


Resources:
  # -----------------------------------------
  # VPC Network
  # -----------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-igw
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-public-rtb
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ1a
      CidrBlock: !Ref PublicSubnet1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-public-sbn1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ1c
      CidrBlock: !Ref PublicSubnet1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-public-sbn2
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # -----------------------------------------
  # SecurityGroup
  # -----------------------------------------

#  The security group 's' does not exist in default VPCという障害対応
#  SGを分割する
#  MQAgentSecurityGroup:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      # GroupName: !Sub ${ProjectName}-${RoleName}-${Environment}-sg
#      GroupDescription: !Sub ${ProjectName}-${RoleName}-${Environment}-sg
#      Tags:
#        - Key: Name
#          Value: !Sub ${ProjectName}-${RoleName}-${Environment}-sg
#      VpcId: !Ref VPC
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 80
#          ToPort: 80
#          # SourceSecurityGroupId: !Ref PublicAlbSecurityGroup
#        - IpProtocol: tcp
#          FromPort: 22
#          ToPort: 22
#          CidrIp: !Ref SSHLocation

  MQAgentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      #GroupName: !Sub ${ProjectName}-${RoleName}-${Environment}-sg
      GroupDescription: !Sub ${ProjectName}-${RoleName}-${Environment}-sg
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${RoleName}-${Environment}-sg


  Ingress1:
    Type : AWS::EC2::SecurityGroupIngress
    Properties:
      # GroupName: !Ref MQAgentSecurityGroup
      GroupId: !Ref MQAgentSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80

  Ingress2:
    Type : AWS::EC2::SecurityGroupIngress
    Properties:
      # GroupName: !Ref MQAgentSecurityGroup
      GroupId: !Ref MQAgentSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref SSHLocation




Outputs:
  VPC:
    Description: ecdevops VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${ProjectName}-${Environment}-VPC
  PublicRouteTable:
    Description: ecdevops vpc route table
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${ProjectName}-${Environment}-public-rtb
  PublicSubnet1:
    Description: ecdevops vpc public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ProjectName}-${Environment}-public-sbn1
  PublicSubnet:
    Description: ecdevops vpc public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ProjectName}-${Environment}-public-sbn2
  MQAgentSecurityGroup:
    Description: ecdevops WebServer Security Group
    Value: !Ref MQAgentSecurityGroup
    Export:
      Name: !Sub ${ProjectName}-${RoleName}-${Environment}-sg
